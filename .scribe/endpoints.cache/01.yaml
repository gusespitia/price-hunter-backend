## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Customer Auth'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/customer-auth/login
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a customer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the customer.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the customer.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: johndoe@example.com
      password: secret
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
              "token_type": "bearer",
              "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Email not registered"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer-auth/register
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new customer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the customer.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the customer.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the customer.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation for the password.'
        required: true
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@example.com
      password: secret
      password_confirmation: secret
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
              "token_type": "bearer",
              "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation error",
              "errors": {
                  "email": ["The email has already been taken."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer-auth/me
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated customer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com",
              "created_at": "2021-09-15T14:59:48.000000Z",
              "updated_at": "2021-09-15T14:59:48.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer-auth/logout
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the authenticated customer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer-auth/refresh
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh the authentication token.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
              "token_type": "bearer",
              "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer-auth/update-profile
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the authenticated customer's profile."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the customer.'
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the customer.'
        required: false
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation for the password.'
        required: false
        example: secret
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      password: secret
      password_confirmation: secret
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com",
              "created_at": "2021-09-15T14:59:48.000000Z",
              "updated_at": "2021-09-15T14:59:48.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Validation error",
              "errors": {
                  "email": ["The email has already been taken."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/customer-auth/delete-user
    metadata:
      groupName: 'Customer Auth'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the authenticated customer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Customer deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
